openapi: 3.0.1
info:
  title: AutoEditr Plugin
  description: Plugin for AutoEditr functionality.
  version: 'v1'
servers:
  - url: http://localhost:3000
paths:
  /api/list:
    get:
      operationId: listFunction
      summary: List directory contents. To list contents of the "working folder", "root directory", or "playground", use "." as the path.
      parameters:
      - in: query
        name: path
        schema:
          type: string
        required: true
        description: The relative path within the directory to list contents.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        size:
                          type: integer
  /api/mkdir:
    post:
      operationId: mkdirFunction
      summary: Create a directory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/rmdir:
    delete:
      operationId: rmdirFunction
      summary: Delete a directory
      parameters:
      - in: query
        name: path
        schema:
          type: string
        required: true
        description: The relative path of the directory to delete.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/writefile:
    post:
      operationId: writeFileFunction
      summary: Write a file. If the content is too long and generates a truncation error, consider splitting the content and using the appendFunction endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/deletefile:
    delete:
      operationId: deleteFileFunction
      summary: Delete a file
      parameters:
      - in: query
        name: path
        schema:
          type: string
        required: true
        description: The relative path of the file to delete.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/rename:
    post:
      operationId: renameFunction
      summary: Rename a file or directory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPath:
                  type: string
                newPath:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/searchreplace:
    post:
      operationId: searchReplaceFunction
      summary: Search and replace text in a file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                searchPattern:
                  type: string
                replacementText:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                      message:
                        type: string
                      occurrencesReplaced:
                        type: integer
  /api/copy:
    post:
      operationId: copyFunction
      summary: Copy a file or directory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourcePath:
                  type: string
                destinationPath:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                      message:
                        type: string
  /api/append:
    post:
      operationId: appendFunction
      summary: Append data to a file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                data:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                      message:
                        type: string
  /api/readfile:
    get:
      operationId: readFileFunction
      summary: Read a file. If an error occurs due to the filename not being available, consider using the listFunction recursively to see available files.
      parameters:
      - in: query
        name: path
        schema:
          type: string
        required: true
        description: The relative path of the file to read.
      - in: query
        name: range
        schema:
          type: string
        required: false
        description: The range of lines to read, in the format 'start-end'.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
  /api/writerange:
    post:
      operationId: writeRangeFunction
      summary: Replace a range of lines in a file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                lines:
                  type: array
                  items:
                    type: string
                range:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
  /api/testPython:
    post:
      operationId: testPythonFunction
      summary: Test a Python project with pytest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string